{"meta":{"title":"guan","subtitle":"GUANの博客","description":"博客因兴趣诞生,在不断完善中","author":"guanshunxin","url":"https://www.guanshunxin.com","root":"/"},"pages":[{"title":"关于本站","date":"2021-12-03T07:58:56.000Z","updated":"2021-12-04T07:59:17.509Z","comments":false,"path":"about/index.html","permalink":"https://www.guanshunxin.com/about/index.html","excerpt":"","text":"GuanのCSFTS“ 认识自我、超越自我 “ 那么你离成功就又进了一步！ 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。 联系我B站：侧耳听风-_- QQ：2984044599 （嘀嘀~，麻烦让一下，我要开车了！） 座右铭：既然选择了远方 便只顾风雨兼程"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://www.guanshunxin.com/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://www.guanshunxin.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2021-07-27T07:31:10.990Z","comments":true,"path":"link/index.html","permalink":"https://www.guanshunxin.com/link/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://www.guanshunxin.com/comments/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2021-07-26T13:06:52.537Z","comments":true,"path":"music/index.html","permalink":"https://www.guanshunxin.com/music/index.html","excerpt":"","text":""},{"title":"","date":"2021-12-03T08:41:10.000Z","updated":"2021-12-04T07:01:16.747Z","comments":false,"path":"List/movies/index.html","permalink":"https://www.guanshunxin.com/List/movies/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://www.guanshunxin.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:13.000Z","updated":"2021-12-14T13:16:23.263Z","comments":false,"path":"List/gallery/wallpaper/index.html","permalink":"https://www.guanshunxin.com/List/gallery/wallpaper/index.html","excerpt":"","text":""},{"title":"纯音乐","date":"2020-04-23T04:58:56.000Z","updated":"2021-12-04T07:38:35.424Z","comments":false,"path":"List/music/index.html","permalink":"https://www.guanshunxin.com/List/music/index.html","excerpt":"","text":""},{"title":"相册","date":"2021-12-15T12:44:49.891Z","updated":"2021-12-15T12:44:49.891Z","comments":false,"path":"List/gallery/index.html","permalink":"https://www.guanshunxin.com/List/gallery/index.html","excerpt":"","text":"壁紙 世俗的欲望 My Wife 动漫壁纸收集"},{"title":"","date":"2021-09-28T14:56:14.000Z","updated":"2021-12-15T12:29:32.160Z","comments":false,"path":"List/gallery/ohmygirl/index.html","permalink":"https://www.guanshunxin.com/List/gallery/ohmygirl/index.html","excerpt":"","text":""}],"posts":[{"title":"Ajax","slug":"08-Ajax","date":"2022-01-25T04:28:32.000Z","updated":"2022-01-26T08:20:42.209Z","comments":true,"path":"posts/8.html","link":"","permalink":"https://www.guanshunxin.com/posts/8.html","excerpt":"","text":"AjaxAjax特点Ajax优点可以无需刷新页面与服务器进行通信允许你根据用户事件来更新部分页面内容Ajax缺点没有浏览历史，不能回退存在跨域问题SEO不友好Ajax get请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;Ajax get 请求&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 200px; height: 100px; border: solid 1px #90b; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;点击发送请求&lt;/button&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const btn=document.getElementsByTagName('button')[0]; const result=document.getElementById(\"result\"); btn.onclick=function() { //console.log(\"test\"); //1.创建对象 const xhr=new XMLHttpRequest(); //2.初始化 设置请求方法和url xhr.open('GET','http://127.0.0.1:8000/server?a=100&amp;b=20&amp;c=40'); //3.发送 xhr.send(); //4.事件绑定 处理服务端返回的结果 //on when 当....时候 //readysatate 是xhr对象中的属性，表示状态0 1 2 3 4 //change 改变时 xhr.onreadystatechange=function() { //判断（服务端返回了所有结果） if(xhr.readyState===4) { //判断响应状态码 200 404 403 401 500 //2xx 都为成功 if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300) { //处理结果 行 头 空行 体 //1.响应行 // console.log(xhr.status);//状态码 // console.log(xhr.statusText);//状态字符串 // console.log(xhr.getAllResponseHeaders());//所有相应头 // console.log(xhr.response);//响应体 //设置result文本 result.innerHTML=xhr.response; } } } } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; Ajax post请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;Ajax get 请求&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 200px; height: 100px; border: solid 1px #903; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const result=document.getElementById(\"result\"); result.addEventListener(\"mouseover\",function(){ // console.log(\"test\"); //1.创建对象 const xhr=new XMLHttpRequest(); //2.初始化 设置请求方法和url xhr.open('POST','http://127.0.0.1:8000/server'); //设置请求头 xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded'); //自定义请求头 xhr.setRequestHeader('name',\"gsx\"); //3.发送 xhr.send('a=100&amp;b=200&amp;c=300'); //4.事件绑定 处理服务端返回的结果 //on when 当....时候 //readysatate 是xhr对象中的属性，表示状态0 1 2 3 4 //change 改变时 xhr.onreadystatechange=function() { if(xhr.readyState===4) { if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300) { result.innerHTML=xhr.response; } } } }) &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; Ajax 响应json数据&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;Ajax get 请求&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 200px; height: 100px; border: solid 1px #903; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const xhr=document.getElementById('result'); window.onkeydown=function() { // console.log(\"test\"); //1.创建对象 const xhr=new XMLHttpRequest(); //设置响应体数据的类型 xhr.responseType='json'; //2.初始化 设置请求方法和url xhr.open('POST','http://127.0.0.1:8000/json-server'); // //设置请求头 // xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded'); // //自定义请求头 // xhr.setRequestHeader('name',\"gsx\"); //3.发送 xhr.send(); //4.事件绑定 处理服务端返回的结果 //on when 当....时候 //readysatate 是xhr对象中的属性，表示状态0 1 2 3 4 //change 改变时 xhr.onreadystatechange=function() { if(xhr.readyState===4) { if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300) { // console.log(xhr.response); // result.innerHTML=xhr.response; //手动对数据转化 // let data=JSON.parse(xhr.response); // console.log(data); // result.innerHTML=data.name; //自动转换 console.log(xhr.response); result.innerHTML=xhr.response.name; } } } } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; IE缓存问题&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;IE缓存问题&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 200px; height: 100px; border: solid 1px #90b; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;点击发送请求&lt;/button&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const btn=document.getElementsByTagName('button')[0]; const result=document.getElementById(\"result\"); btn.addEventListener('click',function(){ const xhr=new XMLHttpRequest(); //主要加上Date.now(); xhr.open(\"GET\",'http://127.0.0.1:8000/ie?t='+Date.now()); xhr.send(); xhr.onreadystatechange=function(){ if(xhr.readyState===4) { if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300) { result.innerHTML=xhr.response; } } } }) &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 请求异常与网络超时&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;请求异常与网络超时&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 200px; height: 100px; border: solid 1px #90b; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;点击发送请求&lt;/button&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const btn=document.getElementsByTagName('button')[0]; const result=document.getElementById(\"result\"); btn.addEventListener('click',function(){ const xhr=new XMLHttpRequest(); //超时设置2s设置 xhr.timeout=2000; //超时回调 xhr.ontimeout=function() { alert(\"网络异常，请稍后重试！！\"); } //网络异常回调 xhr.onerror=function() { alert(\"网络似乎出现了一些问题！\"); } xhr.open(\"GET\",'http://127.0.0.1:8000/delay'); xhr.send(); xhr.onreadystatechange=function(){ if(xhr.readyState===4) { if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300) { result.innerHTML=xhr.response; } } } }) &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 取消请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;取消请求&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;点击发送&lt;/button&gt; &lt;button&gt;点击取消&lt;/button&gt; &lt;script type=\"text/javascript\"&gt; const btns=document.querySelectorAll('button'); let x=null; btns[0].onclick=function() { x=new XMLHttpRequest(); x.open('GET','http://127.0.0.1:8000/delay'); x.send(); } //abort btns[1].onclick=function() { x.abort(); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 重复请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;重复请求&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;点击发送&lt;/button&gt; &lt;script type=\"text/javascript\"&gt; const btns=document.querySelectorAll('button'); let x=null; //标识变量 let isSending=false; btns[0].onclick=function() { //判断标识变量 if(isSending) { //如果正在发送，则取消该请求，创建一个新的请求 x.abort(); } x=new XMLHttpRequest(); //修改标识变量的值 isSending=true; x.open('GET','http://127.0.0.1:8000/delay'); x.send(); x.onreadystatechange=function() { if(x.readyState===4) { //修改标识变量 isSending=false; } } } //abort btns[1].onclick=function() { x.abort(); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; jQuery 发送AJAX请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;jQuery 发送 AJAX 请求&lt;/title&gt; &lt;link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css\" rel=\"stylesheet\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"container\"&gt; &lt;h2 class=\"page-header\"&gt;jQuery发送AJAX请求 &lt;/h2&gt; &lt;button class=\"btn btn-primary\"&gt;GET&lt;/button&gt; &lt;button class=\"btn btn-danger\"&gt;POST&lt;/button&gt; &lt;button class=\"bnt btn-info\"&gt;通用型方法ajax&lt;/button&gt; &lt;/div&gt; &lt;script src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; $('button').eq(0).click(function(){ $.get('http://127.0.0.1:8000/jquery-server',{a:100,b:200},function(data){ console.log(data); },'json') }); $('button').eq(1).click(function(){ $.get('http://127.0.0.1:8000/jquery-server',{a:100,b:200},function(data){ console.log(data); },'json') }); $('button').eq(2).click(function(){ $.ajax({ //url url:'http://127.0.0.1:8000/jquery-server', //参数 data:{a:100,b:200}, //请求类型 type:'GET', //响应体结果 dataType:'json', //成功的回调 success:function(data) { console.log(data); }, //超时时间 timeout:2000, //失败的回调 error:function() { console.log(\"出错了!!\"); }, //头信息 headers:{ c:200, d:300 } }); }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; axios&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;axios&lt;/title&gt; &lt;script crossorigin=\"anonymous\" src=\"https://cdn.bootcdn.net/ajax/libs/axios/0.24.0/axios.min.js\"&gt;&lt;/script&gt; &lt;link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css\" rel=\"stylesheet\"&gt; &lt;/head&gt; &lt;body&gt; &lt;button class=\"btn btn-primary\"&gt;GET&lt;/button&gt; &lt;button class=\"btn btn-danger\"&gt;POST&lt;/button&gt; &lt;button class=\"btn btn-primary\"&gt;AJAX&lt;/button&gt; &lt;script type=\"text/javascript\"&gt; const btns=document.querySelectorAll('button'); //配置 baseURL axios.defaults.baseURL = 'http://127.0.0.1:8000'; btns[0].onclick=function() { //GET请求 axios.get('/axios-server',{ //url参数 params:{ id:100, vip:7 }, //请求头信息 headers:{ name:'gdy', age:20 } }).then(value=&gt;{ console.log(value); }); } btns[1].onclick=function() { axios.post('/axios-server',{ username:'admin', password:'123456' },{ //url params:{ id:200, vip:100 }, //请求头 headers:{ height:100, weight:120, } }); } btns[2].onclick=function() { axios({ //请求方法 method:'POST', //url url:'/axios-server', //url参数 params:{ vip:10, level:30 }, //头信息 headers:{ a:100, b:200 }, //请求体参数 data:{ username:'admin', password:'123' } }).then(response=&gt;{ console.log(response); //响应状态码 console.log(response.status); //响应状态字符串 console.log(response.statusText); //响应头信息 console.log(response.headers); //响应体 console.log(response.data); }) } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; fetch 发送AJAX请求&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;fetch 发送 AJAX请求&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;AJAX请求&lt;/button&gt; &lt;script type=\"text/javascript\"&gt; const btn=document.querySelector('button'); btn.onclick=function() { fetch('http://127.0.0.1:8000/fetch-server',{ //请求方法 method:'POST', //请求头 headers:{ name:'gdy' }, //请求体 body:'username=admin&amp;password=admin' }).then(response=&gt;{ // return response.text(); return response.json(); }).then(response=&gt;{ console.log(response); }); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; jsonp原理&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;jsonp原理&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 300px; height: 100px; border: solid 1px #78a; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; function handle(data) { const result=document.getElementById('result'); result.innerHTML=data.name; } &lt;/script&gt; &lt;script src=\"http://127.0.0.1:8000/jsonp-server\"&gt; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; jsonp案例&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;jsonp案例&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 用户名：&lt;input type=\"text\" id=\"username\"&gt; &lt;p&gt;&lt;/p&gt; &lt;script type=\"text/javascript\"&gt; //获取input元素 const input=document.querySelector('input'); const p=document.querySelector('p'); function handle(data) { input.style.border=\"solid 1px #f00\"; p.innerHTML=data.msg; } input.onblur=function() { //获取用户输入值 let username=this.value; //向服务端发送请求，检测用户名是否存在 //1.创建script标签 const script=document.createElement('script'); //2.设置标签的src属性 script.src='http://127.0.0.1:8000/check-username'; //3.将script插入文档中 document.body.appendChild(script); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; CORS&lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;CORS&lt;/title&gt; &lt;style type=\"text/css\"&gt; #result{ width: 300px; height: 100px; border: solid 1px #78a; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;发送请求&lt;/button&gt; &lt;div id=\"result\"&gt;&lt;/div&gt; &lt;script type=\"text/javascript\"&gt; const btn=document.querySelector('button'); const result=document.getElementById('result'); btn.onclick=function() { //1.创建对象 const x=new XMLHttpRequest(); //2.初始化设置 x.open('GET',\"http:127.0.0.1:8000/cors-server\"); //3.发送 x.send(); //4.绑定事件 x.onreadystatechange=function() { if(x.readyState===4) { if(x.status&gt;=200&amp;&amp;x.status&lt;300) { //输出响应体 // console.log(x.response); result.innerHTML=x.response; } } } } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 服务端//1.引入express const express=require('express'); //2.创建应用对象 const app=express(); //3.创建路由规则 //request是请求的报文 //response是响应的报文 app.get('/server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); //设置响应体 response.send('Hello Ajax'); }); //ie缓存问题 app.get('/ie',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); //设置响应体 response.send('Hello IE a'); }); //延迟 app.all('/delay',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); setTimeout(()=&gt;{ //设置响应体 response.send('延时响应'); },3000) }); //jquery发送ajax请求 app.all('/jquery-server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); response.setHeader('Access-Control-Allow-Headers','*'); //设置响应体 const data = {name: 'gdy'}; // response.send('hello jquery ajax'); response.send(JSON.stringify(data)); }); //axios服务 app.all('/axios-server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); response.setHeader('Access-Control-Allow-Headers','*'); //设置响应体 const data = {name: 'gdy'}; // response.send('hello jquery ajax'); response.send(JSON.stringify(data)); }); //fetch服务 app.all('/fetch-server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); response.setHeader('Access-Control-Allow-Headers','*'); //设置响应体 const data = {name: 'gdy'}; // response.send('hello jquery ajax'); response.send(JSON.stringify(data)); }); //jsonp服务 app.all('/jsonp-server',(request,response)=&gt;{ //response.send('console.log(\"hello\")'); const data={ name:\"gdy\" }; //将数据转化为字符串 let str=JSON.stringify(data); //返回结果 response.end(`handle(${str})`); }); //检测用户名是否存在 app.all('/check-username',(request,response)=&gt;{ //response.send('console.log(\"hello\")'); const data={ exist:1, msg:'用户名已经存在' }; //将数据转化为字符串 let str=JSON.stringify(data); //返回结果 response.end(`handle(${str})`); }); //CORS app.all('/cors-server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); response.send('hello CORS'); }); // app.post('/server',(request,response)=&gt;{ app.all('/server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); //允许自定义响应头 response.setHeader('Access-Control-Allow-Headers','*'); //设置响应体 response.send('Hello Ajax POST'); }); //服务端响应json数据 app.all('/json-server',(request,response)=&gt;{ //设置响应头 response.setHeader('Access-Control-Allow-Origin','*'); //允许自定义响应头 response.setHeader('Access-Control-Allow-Headers','*'); //设置响应体 // response.send('Hello Ajax JSON1'); //响应一个数据 const data={ name:'gsx521521' }; //对对象进行字符串转换 let str=JSON.stringify(data); //设置响应体 response.send(str); }); //4.监听端口启动服务 app.listen(8000,()=&gt;{ console.log(\"服务已经启动，8000 端口监听中....\"); });","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Ajax","slug":"Ajax","permalink":"https://www.guanshunxin.com/tags/Ajax/"}]},{"title":"Node","slug":"07-nodejs","date":"2022-01-24T13:46:32.000Z","updated":"2022-01-25T07:47:40.589Z","comments":true,"path":"posts/7.html","link":"","permalink":"https://www.guanshunxin.com/posts/7.html","excerpt":"","text":"执行JS文件node JS文件 Node中JS文件引入JS要使用require一个JS文件就是一个模块 require(\"./module.js\"); npm等核心模块可以直接写名字 require(\"express\"); 创建一个对象 var md= require(\"./module.js\"); 每个JS文件中的代码都是独立运行在一个函数中的，而不是全局作用域所以一个模块的变量和函数在其他模块中无法访问向外部暴露变量和方法exports.x=\"我是module.js中的x\" exports.fn=function(){}; 当node执行代码时，他会在代码的最外围添加如下代码function(exports,require,module,_filename,_dirname) { } exports - 该对象用来将变量或函数暴露到外部 require - 函数，用来引入外部模块 module - module代表的是当前模块本身 - exports就是module的属性 - 既可以使用exports导出，也可以使用module.exports导出 _filename - 当前模块完整路径 _dirname - 当前模块所在文件夹的路径 module.exports简略代码,不用一行一行的写exports module.exports={ name:\"猪八戒\", age:18 say:function(){ console.log(\"gsx\"); } } npm 命令npm -v 查看版本 npm 帮助说明 npm search 包名 搜索包 npm install 包名 在当前目录安装包 npm install 包名 -g 在全局模式安装包 npm init 初始化包(生产json文件) npm remove 包名 删除包 npm install 包名 --save 安装包并生成依赖 npm install 下载当前项目所依赖包 Buffer(缓冲区)Buffer的结构和数组很像，操作的方法和数组类似 数组不能储存二进制文件，而buffer就是专门用来储存二进制数据 使用buffer不需要引入模块，直接使用 在buffer中储存的都是二进制数据，但都以16进制形式显示 var str=\"hello\"; var buf = buffer.from(str); console.log(buf); &lt;Buffer 48 65 6c 6c 6f&gt; 创建一个10个字节的buffer var buf=Buffer.alloc(10); 通过索引，来操作buf中的元素 buf[0]=88;十进制方式赋值 buf[1]=0xaa;十六进制赋值 buf.toString 将缓冲区的数据转换成字符串 文件系统fs打开文件fs.openSync(path,flags[,mode]) -path 要打开的文件路径 -flags 打开文件要做操作的类型 r 只读 w 可写 -mode 设置文件的操作权限，一般不传 向文件写入内容fs.writeSync(fd,string[,position[,encoding]]) position 写入的起始位置 var fs=require(\"fs\"); var fd=fs.openSunc(\"hello.txt\",\"w\"); fs.writeSync(fd,\"今天天气不错\"); 关闭文件fs.closeSync(fd); 异步文件写入fs.open(path,flags[,mode],callback) 异步调用的方法 异步调用的方法，结果都是通过回调参数返回的 回调参数 -err 错误对象，如果没有错误则为null -fd 文件的描述符 fs.write(fd,string[,position[,encoding]],callback) fs.open(\"hello.tx\",\"w\",function(err,fd){ //判断是否出错 if(!err) { fs.write(fd,\"这是异步写入的内容\",function(err){ if(!err) { console.log(\"写入成功\"); } fs.close(fd,function(err) { if(!err) { console.log(\"文件已关闭\"); } }) } }) } else { console.log(err); } }); 简单文件写入fs.writeFile(file,data[,options],callback) fs.writeFileSync(file,data[,options]) -file 要写入的文件路径 -data 要写入的数据 -options 选项，可以写入进行一些设置 -callback 当写入完成后执行的函数 a 可以追加内容 var fs=require(\"fs\"); fs.writeFile(\"hello.txt\",\"这是通过writeFile写入的内容\",{flag:\"w\"},function(err) { if(!err) { console.log(\"写入成功\"); } }) 流式文件写入大文件的写入 var fs=require(\"fs\"); 创建一个可写流 fs.createWriteStream(path[,options]) -可以创建一个可写流 -path 文件路径 -option 配置的参数 once(事件字符串，回调函数) 可以为对象绑定一个一次性的事件，该事件会在触发一次后失效 ws.once(\"open\",function(){ console.log(\"流被打开了\"); }) ws.once(\"close\",function(){ console.log(\"流被关闭了\"); }) var ws=fs.createWriteStream(\"hello.txt\"); ws.end(); 文件读取简单文件读取fs.readFile(path[,options],callback) fs.raedFileSync(path[,options]) var fs=require(\"fs\"); fs.readFile(\"hello.txt\",function(err,data){ if(!err) { //console.log(data.toString()); 将data写入文件中 fs.writeFile(\"hello.txt\",data,function(err){ if(!err) { console.log(\"文件写入成功\"); } }) } }) 流式文件读取var fs=require(\"fs\"); var rs=fs.createReadStream(\"a.jpg\"); rs.once(\"open\",function(){ console.log(\"流被打开了\"); }) rs.once(\"close\",function(){ console.log(\"流被关闭了\"); }) rs.on(\"data\",function(data){ console.log(data); }) pipe直接将可读流输出到可写流rs.pipe(ws); fs模块的其他方法检查一个文件是否存在var fs=require(\"fs\"); var isExists=fs.existsSync(\"a.jpg\"); consloe.log(isExists);//false 获取文件信息fs.stat(\"a.mp3\",function(err,stat){ console.log(stat); }); 删除文件fs.unlink(path,callback); fs.unlink(\"hello.txt\") 读取目录结构fs.readdir(\".\",function(err,files){ if(!err) { console.log(files); } }) 截断文件fs.truncateSync(\"hello.txt\",10); 将文件设为指定大小，上例设为10字节 创建目录fs.mkdirSync(\"hello\"); 删除目录fs.rmdirSync(\"hello\"); 重命名文件fs.renameSync(\"原名(路径)\",\"新名(路径)\",function(err){ if(!err) { console.log(\"修改成功\"); } }); 监视文件fs.watchFile(filename[,options],listener) -filename 文件名 -options 配置选项 -listener 回调函数 curr 当前文件大小 prev 修改前文件大小 fs.watchFile(\"hello.txt\",{interval:1000},function(curr,prev){ console.log(\"文件发生变化\"); console.log(\"修改前文件大小:\"+prev.size); console.log(\"修改后文件大小:\"+curr.size); })","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Node","slug":"Node","permalink":"https://www.guanshunxin.com/tags/Node/"}]},{"title":"MYSQL-DCL","slug":"06-mysql4","date":"2022-01-23T09:33:32.000Z","updated":"2022-01-23T09:52:28.320Z","comments":true,"path":"posts/6.html","link":"","permalink":"https://www.guanshunxin.com/posts/6.html","excerpt":"","text":"DCL-管理用户查询用户use mysql; select * from user; 创建用户create user '用户名' @ '主机名' identified by '密码'; 创建用户itgsx ,只能在当前主机localhost访问，密码123456 create user 'itgsx' @ 'localhost' identified by '123456'; 创建用户itgsx1 ，能在任意主机访问改数据库，密码123456 create user 'itgsx' @ '%' identified by '123456'; 修改用户密码alter user '用户名' @ '主机名' identified with mysql_native_password by '新密码'; alter user 'itgsx1'@'%' identified with mysql_native_password by '1234'; 删除用户drop user '用户名' @ '主机名'; drop user 'itgsx' @'localhost'; DCL-权限控制查询权限show grants for '用户名'@'主机名'; 授予权限grant 权限列表 on 数据库名.表名 to '用户名'@'主机名'; grant all on hxy.* to 'itgsx'@'%';把hxy数据库的所有权限授予itgsx用户 撤销权限revoke 权限列表 on 数据库名.表名 to '用户名'@'主机名'; revoke all on hxy.* to 'itgsx'@'%';撤销itgsx用户在hxy数据库的所有权限","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"MYSQL","slug":"MYSQL","permalink":"https://www.guanshunxin.com/tags/MYSQL/"}]},{"title":"MYSQL-DQL","slug":"05-mysql3","date":"2022-01-23T09:13:32.000Z","updated":"2022-01-23T09:18:35.651Z","comments":true,"path":"posts/5.html","link":"","permalink":"https://www.guanshunxin.com/posts/5.html","excerpt":"","text":"DQL-数据查询DQL-基础查询1.查询多个字段select 字段1,字段,字段3,... from 表名; select id from tb_user; select * from 表名; 2.设置别名select 字段1[as 别名1],字段2[as 别名2]...from 表名; select id as '编号' from tb_user; as可以省略 3.去除重复记录select distinct 字段列表 from 表名; select distinct id '编号' from tb_user; DQL-条件查询select 字段列表 from 表名 where 条件列表; select * from tb_user where age=20; select * from tb_user where age&gt;20; select * from tb_user where age&gt;=20 and age&lt;=50; 年龄大于20且小于50的 select * from tb_user where age=20 or age=50; 年龄为20或50的 select * from tb_user where age in(15,20,30); 年龄为15,20,30的 select * from tb_user where age between 20 and 50; 年龄在20到50之间的 select * from tb_user where id is null; id为空 select * from tb_user where id is not null; id不为空 select * from tb_user where name like '__'; 查询名字为两个字的名字 select * from tb_user where idcard like '%X' 查询idcard最后一位为X的 DQL-聚合函数null 不会被统计 select count(*) from tb_user; 数据总数量 select count(id) from tb_user; id总数量 select max(age) from tb_user; 年龄最大值 select min(age) from tb_user; 年龄最小值 select avg(age) from tb_user; 年龄平均值 select sum(age) from tb_user where address='河南'; 求河南地区人的年龄的和 DQL-分组查询select 字段列表 from 表名 [where 条件] group by 分组字段名 [having 分组后过滤条件] 1、根据性别分组，统计男员工和女员工的数量 select gender,count(*) from tb_user group by gender; 2、根据性别分组，统计男员工和女员工的平均年龄 select gender,avg(age) from tb_user group by gender; 3、查询年龄小于45的员工，并根据工作地址分组，获取员工数量大于等于3的工作地址 select workaddress count(*) from tb_user where age&lt;45 group by workaddress having count(*)&gt;=3; DQL-排序查询select 字段列表 from 表名 order by 字段1 排序方式1,字段2 排序方式2; 1、根据年龄对公司的员工进行升序(降序)排序 select * from tb_user order by age asc; 升序asc 可以省略 select * from tb_user order by age desc; 降序 2、根据年龄进行升序排序，如果年龄相同，再按 id 降序排序 select * from tb_user order by age asc, id desc; DQL-分页查询select 字段列表 from 表名 limit 起始索引,查询记录数; select * from tb_user limit 0,10; 练习查询性别为男，且年龄在20-40岁(含）之间的前五个员工信息，对查询的结果按年龄升序排序，年龄相同按id进行升序排序 select * from tb_user where gender='男' and age between 20 and 40 order by age asc,id asc limit 5;","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"MYSQL","slug":"MYSQL","permalink":"https://www.guanshunxin.com/tags/MYSQL/"}]},{"title":"MYSQL-DML","slug":"04-mysql2","date":"2022-01-22T06:55:32.000Z","updated":"2022-01-23T10:05:28.649Z","comments":true,"path":"posts/4.html","link":"","permalink":"https://www.guanshunxin.com/posts/4.html","excerpt":"","text":"SQL-DML 数据的增删改查添加数据1.给指定字段添加数据insert into 表名(字段名1,字段名2,...) values(值1,值2,...); insert tb_user(id, name, age, gender, nickname) values (1,'gsx',20,'男','ggsx'); 2.给全部字段添加数据insert into 表名 values(值1,值2,...); insert tb_user values (2,'gs2x',20,'男','ggssx'); 3.批量添加数据insert into 表名(字段名1,字段名2,...) values(值1,值2,...),(值1,值2,...),(值1,值2,...); insert tb_user(id, name, age, gender, nickname) values (1,'gsx',20,'男','ggsx'),(2,'gs3x',20,'男','gg3sx'); insert into 表名 values(值1,值2,...),(值1,值2,...),(值1,值2,...); insert tb_user values (2,'gs2x',20,'男','ggssx'),(2,'gs3x',20,'男','gg3sx'); 修改数据update 表名 set 字段名1=值1,字段名2=值2,...[where 条件];不加where 表示全部数据 update tb_user set name='gdy' where id=1; 删除数据delete from 表名 [where 条件]; delete from tb_user where id=1;","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"MYSQL","slug":"MYSQL","permalink":"https://www.guanshunxin.com/tags/MYSQL/"}]},{"title":"MYSQL-DDL","slug":"03-mysql","date":"2022-01-22T06:54:32.000Z","updated":"2022-01-23T10:05:15.954Z","comments":true,"path":"posts/3.html","link":"","permalink":"https://www.guanshunxin.com/posts/3.html","excerpt":"","text":"DDL-数据库的操作使用windows的命令提示符完成下列操作MYSQL的启动net start mysql MYSQL的停止net stop mysql mysql客户端的连接mysql -uroot -p 然后输入密码进入 查询所有数据库show databases; 查询当前数据库select database(); 创建数据库create database hxy; create database if not exists hxy; 即使数据库存在也不报错 create database hxy default charset utf8mb4;设置指定字符集，推荐使用4个字节的； 删除数据库drop database hxy; drop database if exists hxy; 如果存在就删除，不存在不会报错 使用数据库use hxy; DDL-表操作查看当前数据库所有的表show tables; 创建表create table 字段名( 字段1 字段1类型[comment 字段1注释], 字段2 字段2类型[comment 字段2注释], 字段3 字段3类型[comment 字段3注释], ...... 字段n 字段n类型[comment 字段1注释] )[comment 表注释]; 查询表结构desc tb_user; 查询指定表的建表语句show create table tb_user; 修改表，添加字段alter table 表名 add 字段名 类型(长度) [comment 注释] [约束]; alter table tb_user add nickname varchar(20) comment '昵称'; 修改数据类型alter table 表名 modify 字段名 新数据类型(长度); 修改字段名和字段类型alter table 表名 change 旧字段名 新字段名 类型(长度) [comment 注释] [约束]; alter table tb_user change nickname nickname1 varchar(30) comment '用户名'; 删除字段alter table 表名 drop 字段名; 修改表名alter table 表名 rename to 新表名; 删除表drop table [if exists] 表名; drop table if exists tb_user; 删除指定表，并重新创建该表truncate table 表名;","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"MYSQL","slug":"MYSQL","permalink":"https://www.guanshunxin.com/tags/MYSQL/"}]},{"title":"Live2d看板娘位置的改变","slug":"02-对live2d看板娘位置的改变","date":"2021-12-04T10:13:30.000Z","updated":"2021-12-05T12:31:13.949Z","comments":true,"path":"posts/2.html","link":"","permalink":"https://www.guanshunxin.com/posts/2.html","excerpt":"","text":"页面上的东西太多了，可爱的看版娘都没地方了，现在就让我们改变它的位置吧 找到L2Dwidget.min.js首先在自己的博客主目录下找到 node_modules ,打开 liv2d-widget 文件夹，编辑 L2Dwidget.min.js。 修改其中的positionCtrl+f 找到position，修改 hOffset 改变的是水平的位置， hOffset 修改垂直位置 （ 根据自己的要求改变 ）","categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.guanshunxin.com/tags/Hexo/"}]},{"title":"博客与博主","slug":"01-博客诞生","date":"2021-05-27T13:00:00.000Z","updated":"2021-12-04T09:53:29.782Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://www.guanshunxin.com/posts/1.html","excerpt":"","text":"相遇皆是缘分 为什么建博客？肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有一个自己的博客写一些自己感兴趣的事或物,不是一件很酷的事嘛! 展望博客我会整理一些个人所学的知识（学前端的，也会捣鼓捣鼓一些其它的专业的知识）或生活方面有兴趣的事发到博客上供大家观摩 关于博主有位可爱的（小）朋友，给我取名叫 “仙气”，这是也是我博客上自居 “仙气” 的由来。喜欢自己所喜欢的，做自己想做的，追求自由与潇洒，多酷啊！ 想法是美好的，可现实… … 给大家推荐一首诗吧 《自由与爱情》---作者:裴多菲 ​ 生命诚可贵 ​ 爱情价更高 ​ 若为自由故 ​ 二者皆可抛 溜溜球啦！","categories":[{"name":"生活","slug":"生活","permalink":"https://www.guanshunxin.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"想法","slug":"想法","permalink":"https://www.guanshunxin.com/tags/%E6%83%B3%E6%B3%95/"}]}],"categories":[{"name":"学习","slug":"学习","permalink":"https://www.guanshunxin.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"生活","slug":"生活","permalink":"https://www.guanshunxin.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"Ajax","slug":"Ajax","permalink":"https://www.guanshunxin.com/tags/Ajax/"},{"name":"Node","slug":"Node","permalink":"https://www.guanshunxin.com/tags/Node/"},{"name":"MYSQL","slug":"MYSQL","permalink":"https://www.guanshunxin.com/tags/MYSQL/"},{"name":"Hexo","slug":"Hexo","permalink":"https://www.guanshunxin.com/tags/Hexo/"},{"name":"想法","slug":"想法","permalink":"https://www.guanshunxin.com/tags/%E6%83%B3%E6%B3%95/"}]}